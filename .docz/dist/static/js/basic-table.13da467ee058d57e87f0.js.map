{"version":3,"sources":["D:/Workspace/packages/NWB/rk-docs/src/doc/BasicTable.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","D_Workspace_packages_NWB_rk_docs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","docz__WEBPACK_IMPORTED_MODULE_3__","__position","__code","__scope","this","Playground","Row","BasicTable","Tag","rk_admin_ui_es_basic_table__WEBPACK_IMPORTED_MODULE_5__","columns","title","dataIndex","key","render","text","record","rk_admin_ui_es_preset_tag__WEBPACK_IMPORTED_MODULE_6__","type","is_active","dataSource","_id","Math","floor","random","name","name_2","pagination","hideOnSinglePage","pageSize","total","showTotal","range","concat","rowKey","rowSelection","onChange","selectedRowKeys","selectedRows","isMDXComponent"],"mappings":"ujBAcMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAE5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,cADR,cAGAL,OAAAE,EAAA,EAAAF,CAAA,2CACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,cADR,cAGAL,OAAAE,EAAA,EAAAF,CAAA,kBACEA,OAAAE,EAAA,EAAAF,CAAA,KAAGM,WAAW,cAAd,oBAAgDN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,KAAQ,CAClEC,KAAQ,0DADoC,sBAIlDP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,SADR,SAGAL,OAAAE,EAAA,EAAAF,CAACQ,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,mmEAAkqEC,QAAS,CAC5sEZ,MAAOa,KAAOA,KAAKb,MAAQA,EAC3Bc,eACAC,cACAC,eACAC,SACCZ,QAAQ,cACXJ,OAAAE,EAAA,EAAAF,CAACiB,EAAA,EAAD,CAAYC,QAAS,CAAC,CAClBC,MAAO,OACPC,UAAW,OACXC,IAAK,QACJ,CACDF,MAAO,SACPC,UAAW,SACXC,IAAK,UACJ,CACDF,MAAO,SACPE,IAAK,SACLD,UAAW,YACXE,OAAQ,SAACC,EAAMC,GAAP,OAAkBxB,OAAAE,EAAA,EAAAF,CAACyB,EAAA,EAAD,CAAKC,MAA2B,IAArBF,EAAOG,UAAqB,UAAY,SAAUvB,QAAQ,QACrD,IAArBoB,EAAOG,UAAqB,SAAW,eAE1DC,WAAY,CAAC,CACfC,IAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACrBC,KAAM,cACNC,OAAQ,cACRP,WAAW,GACV,CACDE,IAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACrBC,KAAM,QACNC,OAAQ,QACRP,WAAW,GACV,CACDE,IAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACrBC,KAAM,gBACNC,OAAQ,gBACRP,WAAW,GACV,CACDE,IAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACrBC,KAAM,cACNC,OAAQ,cACRP,WAAW,GACV,CACDE,IAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACrBC,KAAM,sBACNC,OAAQ,sBACRP,WAAW,GACV,CACDE,IAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACrBC,KAAM,WACNC,OAAQ,WACRP,WAAW,GACV,CACDE,IAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACrBC,KAAM,sBACNC,OAAQ,sBACRP,WAAW,GACV,CACDE,IAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACrBC,KAAM,2BACNC,OAAQ,2BACRP,WAAW,GACV,CACDE,IAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACrBC,KAAM,OACNC,OAAQ,OACRP,WAAW,IACTQ,WAAY,CACdC,kBAAkB,EAClBC,SAAU,EACVC,MAAO,EACPC,UAAW,SAACD,EAAOE,GAAR,SAAAC,OAAqBD,EAAM,GAA3B,KAAAC,OAAiCD,EAAM,GAAvC,QAAAC,OAAgDH,KAC1DI,OAAO,MAAMC,aAAc,CAC5BC,SAAU,SAACC,EAAiBC,MAC3B1C,QAAQ,+LAKjBR,EAAWmD,gBAAiB","file":"static/js/basic-table.cc659481.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground} from 'docz'\nimport Row from 'antd/es/row';\nimport BasicTable from 'rk-admin-ui/es/basic-table';\nimport Tag from 'rk-admin-ui/es/preset-tag';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"basictable\"\n    }}>{`BasicTable`}</h1>\n    <p>{`A table displays rows of data.`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: Accept all `}<a parentName=\"p\" {...{\n          \"href\": \"https://ant.design/components/table/?locale=en-US#API\"\n        }}>{`Table Properties`}</a></p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<BasicTable\\n  columns={[\\n    {\\n      title: \\'Name\\',\\n      dataIndex: \\'name\\',\\n      key: \\'name\\',\\n    },\\n    {\\n      title: \\'Name 2\\',\\n      dataIndex: \\'name_2\\',\\n      key: \\'name_2\\',\\n    },\\n    {\\n      title: \\'Status\\',\\n      key: \\'status\\',\\n      dataIndex: \\'is_active\\',\\n      render: (text, record) => (\\n        <Tag type={record.is_active === true ? \\'success\\' : \\'danger\\'}>\\n          {record.is_active === true ? \\'Active\\' : \\'Inactive\\'}\\n        </Tag>\\n      ),\\n    },\\n  ]}\\n  dataSource={[\\n    {\\n      _id: Math.floor(Math.random() * 1000000000),\\n      name: \\'Electronics\\',\\n      name_2: \\'Electronics\\',\\n      is_active: true,\\n    },\\n    {\\n      _id: Math.floor(Math.random() * 1000000000),\\n      name: \\'Music\\',\\n      name_2: \\'Music\\',\\n      is_active: true,\\n    },\\n    {\\n      _id: Math.floor(Math.random() * 1000000000),\\n      name: \\'Women Fashion\\',\\n      name_2: \\'Women Fashion\\',\\n      is_active: true,\\n    },\\n    {\\n      _id: Math.floor(Math.random() * 1000000000),\\n      name: \\'Men Fashion\\',\\n      name_2: \\'Men Fashion\\',\\n      is_active: true,\\n    },\\n    {\\n      _id: Math.floor(Math.random() * 1000000000),\\n      name: \\'Movies & Television\\',\\n      name_2: \\'Movies & Television\\',\\n      is_active: false,\\n    },\\n    {\\n      _id: Math.floor(Math.random() * 1000000000),\\n      name: \\'Software\\',\\n      name_2: \\'Software\\',\\n      is_active: true,\\n    },\\n    {\\n      _id: Math.floor(Math.random() * 1000000000),\\n      name: \\'Sports and Outdoors\\',\\n      name_2: \\'Sports and Outdoors\\',\\n      is_active: true,\\n    },\\n    {\\n      _id: Math.floor(Math.random() * 1000000000),\\n      name: \\'Tools & Home Improvement\\',\\n      name_2: \\'Tools & Home Improvement\\',\\n      is_active: true,\\n    },\\n    {\\n      _id: Math.floor(Math.random() * 1000000000),\\n      name: \\'Baby\\',\\n      name_2: \\'Baby\\',\\n      is_active: true,\\n    },\\n  ]}\\n  pagination={{\\n    hideOnSinglePage: true,\\n    pageSize: 5,\\n    total: 9,\\n    showTotal: (total, range) => `${range[0]}-${range[1]} of ${total}`,\\n  }}\\n  rowKey=\\\"_id\\\"\\n  rowSelection={{\\n    onChange: (selectedRowKeys, selectedRows) => {},\\n  }}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Row,\n      BasicTable,\n      Tag\n    }} mdxType=\"Playground\">\n    <BasicTable columns={[{\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name'\n      }, {\n        title: 'Name 2',\n        dataIndex: 'name_2',\n        key: 'name_2'\n      }, {\n        title: 'Status',\n        key: 'status',\n        dataIndex: 'is_active',\n        render: (text, record) => <Tag type={record.is_active === true ? 'success' : 'danger'} mdxType=\"Tag\">\n                            {record.is_active === true ? 'Active' : 'Inactive'}\n                        </Tag>\n      }]} dataSource={[{\n        _id: Math.floor(Math.random() * 1000000000),\n        name: 'Electronics',\n        name_2: 'Electronics',\n        is_active: true\n      }, {\n        _id: Math.floor(Math.random() * 1000000000),\n        name: 'Music',\n        name_2: 'Music',\n        is_active: true\n      }, {\n        _id: Math.floor(Math.random() * 1000000000),\n        name: 'Women Fashion',\n        name_2: 'Women Fashion',\n        is_active: true\n      }, {\n        _id: Math.floor(Math.random() * 1000000000),\n        name: 'Men Fashion',\n        name_2: 'Men Fashion',\n        is_active: true\n      }, {\n        _id: Math.floor(Math.random() * 1000000000),\n        name: 'Movies & Television',\n        name_2: 'Movies & Television',\n        is_active: false\n      }, {\n        _id: Math.floor(Math.random() * 1000000000),\n        name: 'Software',\n        name_2: 'Software',\n        is_active: true\n      }, {\n        _id: Math.floor(Math.random() * 1000000000),\n        name: 'Sports and Outdoors',\n        name_2: 'Sports and Outdoors',\n        is_active: true\n      }, {\n        _id: Math.floor(Math.random() * 1000000000),\n        name: 'Tools & Home Improvement',\n        name_2: 'Tools & Home Improvement',\n        is_active: true\n      }, {\n        _id: Math.floor(Math.random() * 1000000000),\n        name: 'Baby',\n        name_2: 'Baby',\n        is_active: true\n      }]} pagination={{\n        hideOnSinglePage: true,\n        pageSize: 5,\n        total: 9,\n        showTotal: (total, range) => `${range[0]}-${range[1]} of ${total}`\n      }} rowKey='_id' rowSelection={{\n        onChange: (selectedRowKeys, selectedRows) => {}\n      }} mdxType=\"BasicTable\" />\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}